module{
name=testeIO
}

signal{
name=in_data
type=logic [8]
io=input
connect=in_data
}

signal{
name=out_data
type=logic [8]
io=output
connect=out_data
}

clock{
name=clock
period=90
}

reset{
name=reset
period=3e12
duration=180
}

interface{
name=agentDummy
instance=agtDummy
signal=in_data
signal=out_data
clock=clock
reset=reset
}

field{
name=in_data
type=int
}

field{
name=out_data
type=int
}

transaction{
name=dummyTransa
field=in_data
field=out_data
}

transaction{
name=dummyTransa2
field=in_data
field=out_data
}

agent{
name=agentDummy
instance=instanceDummy
interface=agentDummy
transaction=dummyTransa
driver_policy=
monitor_policy=
type=bidirectional
refmod=dummyRfm
comp=dummyComp
}

refmod{
name=dummyRefmod
instance=dummyRfm
refmod_policy=
comp=dummyComp
connect=dummyRfm2,dummyTransa2
}

refmod{
name=dummyRefmod2
instance=dummyRfm2
refmod_policy=
comp=dummyComp2
}

comp{
name=comp
instance=dummyComp
transaction=dummyTransa
}

comp{
name=comp
instance=dummyComp2
transaction=dummyTransa2
}

sequence{
name=dummySequence
agent=instanceDummy
transaction=dummyTransa
}

test{
name=dummyTest
sequence=dummySequence
}